version: '3.10'

networks:
  backend:

volumes:
  pgdata:
  static:
  media:

services:

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      backend:
        aliases:
          - redis

  postgres:
    image: postgres:14.3-alpine3.16
    restart: unless-stopped
    container_name: postgres
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./logs:/var/log
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      backend:
        aliases:
          - postgres

  mongo:
    image: mongo:4.4.14
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    env_file:
      - .env
    networks:
      backend:
        aliases:
          - mongo

  web:
    build: .
    container_name: web
    env_file:
      - .env
#    expose:
#      - 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/app
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    links:
      - redis
      - postgres
      - mongo
    depends_on:
      - redis
      - postgres
      - mongo
    networks:
      backend:
        aliases:
          - web

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    links:
      - redis
      - web
    depends_on:
      - redis
      - web
    networks:
      backend:
        aliases:
          - celery

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "d@d.dd"
      PGADMIN_DEFAULT_PASSWORD: "123"
      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - pgdata:/var/lib/pgadmin
#      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
    networks:
      backend:
        aliases:
          - pgadmin

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    container_name: nginx
    restart: always
    volumes:
      - static:/usr/src/app/static
      - media:/usr/src/app/media
    links:
      - web
    depends_on:
      - web
    networks:
      backend:
        aliases:
          - nginx
